apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: my-template
labels:
  app: ${NAME}
  template: my-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: >
        [{
          "from": {
            "kind": "ImageStreamTag",
            "name": "${IMAGESTREAM_NAME}:${IMAGESTREAM_TAG}",
            "namespace": "${IMAGESTREAM_NAMESPACE}"
          },
          "fieldPath": "spec.template.spec.containers[?(@.name==\"${NAME}-pod\")].image"
        }]

    labels:
      app: ${NAME}
      name: ${NAME}-deployment
    name: ${NAME}-deployment
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${NAME}
        deployment: ${NAME}-deployment
    template:
      metadata:
        annotations:
          alpha.image.policy.openshift.io/resolve-names: '*'
        labels:
          app: ${NAME}
          deployment: ${NAME}-deployment
      spec:
        containers:
        - image: ${IMAGE}
          name: ${NAME}-pod
          ports:
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME}-service
    name: ${NAME}-service
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deployment: ${NAME}-deployment
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}-route
    name: ${NAME}-route
    namespace: ${NAMESPACE}
  spec:
    host: ${NAMESPACE}.${DOMAIN}
    port:
      targetPort: 8080
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: ${NAME}-service
      weight: 100
    wildcardPolicy: None


parameters:
  - name: NAME
    value: template
    description: Value that will be used as part of resources' name
    required: true
  - name: NAMESPACE
    value: practice-template
    description: Namespace where the app will be deployed
    required: true
  - name: IMAGE
    description: |
     ImageStream/Image-Registry value. 
    required: true
 #   value: image-registry.openshift-image-registry.svc:5000/practice/test@sha256:6b7e4d171c890ca9a4867b5f05f4861a879bb585fae0fef29c7e4861836a6f0d
    value: practice/test:image-src
  - name: DOMAIN
    description: Domain value
    required: true

# In case of using ImageStream as Image value configure these:
  - name: IMAGESTREAM_NAME
    value: test
    description: ImageStream name to track
    required: true
  - name: IMAGESTREAM_TAG
    value: image-src
    description: Tag of the ImageStream to deploy
    required: true
  - name: IMAGESTREAM_NAMESPACE
    value: practice
    description: Namespace of the source ImageStream
    required: true
